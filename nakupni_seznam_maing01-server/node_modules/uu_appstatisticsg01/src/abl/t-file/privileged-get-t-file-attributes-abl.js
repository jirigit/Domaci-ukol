// template: privileged-get-t-file-attributes-abl
// templateVersion: 0.1.1
// documentation: - https://uuapp.plus4u.net/uu-bookkit-maing01/d11a43aa3a214083b84a4e4103a4f635/book/page?code=69027856
//@@viewOn:revision
// coded: Hrynkiv Andriy (5890-4974-1)
// reviewed: Lukas Sykora (12-7774-1) - 30.03.2022
//@@viewOff:revision
//@@viewOn:constants
"use strict";
const { Validator } = require("uu_appg01_server").Validation;
const { ValidationHelper } = require("uu_appg01_server").AppServer;
const Errors = require("../../api/errors/t-files-error");
const WARNINGS = require("../../api/warnings/t-files-warnings");
const Constants = require("../../components/constants/t-file-constans");
const AppClient = require("uu_appg01_server").AppClient;
const { Config } = require("uu_appg01_server").Utils;
// eslint-disable-next-line no-unused-vars
const { getSystemIdentity, getAuthorizedProfiles } = require("../../helpers/app-stats-helper");

class PrivilegedGetTFileAttributesAbl {
  constructor() {
    this.validator = Validator.load();
  }

  async privilegedGetTFileAttributes(dtoIn, authzContext) {
    //HDS 1
    let validationResult = this.validator.validate("uuAppstatisticsPrivilegedGetTFileAttributesTypes", dtoIn);
    let uuAppErrorMap = ValidationHelper.processValidationResult(
      dtoIn,
      validationResult,
      WARNINGS.getPrivilegedAsidFileUnsupportedKeys.code,
      Errors.PrivilegedGetTFileAttributes.InvalidDtoIn
    );

    //HDS 2
    const sysIdentitySession = await getSystemIdentity();
    let systemIdentityCode = sysIdentitySession.getClientIdentity().getAwid();

    // HDS 3
    // HDS 3.A
    // HDS 3.B
    if (!Config.get(Constants.TFileStoreUri)) {
      throw new Errors.PrivilegedGetTFileAttributes.TFileStoreUriConfigIsNotSet({ uuAppErrorMap });
    }

    // HDS 4
    let client = new AppClient({
      baseUri: Config.get(Constants.TFileStoreUri),
      session: sysIdentitySession,
    });

    const authorizedProfiles = await getAuthorizedProfiles(authzContext);

    let tFileObject;

    try {
      tFileObject = await client.get(Constants.Calls.getAttributes, { ...dtoIn, asid: systemIdentityCode });
    } catch (error) {
      // HDS 4.1
      throw new Errors.PrivilegedGetTFileAttributes.GetAttributesFailed(
        { uuAppErrorMap },
        {
          authorizedProfiles,
          uuConsoleBaseUri: error?.paramMap?.uuConsoleBaseUri,
          consoleCode: error?.paramMap?.consoleCode,
          progressBusCode: error?.paramMap?.progressBusCode,
        },
        error
      );
    }

    // HDS 5
    return { ...tFileObject, authorizedProfiles, uuAppErrorMap };
  }
}

module.exports = new PrivilegedGetTFileAttributesAbl();
