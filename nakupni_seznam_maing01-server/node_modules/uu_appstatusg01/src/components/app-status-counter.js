const { Config, OptsReader } = require("uu_appg01_core-utils");

const IdentityDataCounter = require("./identity-data-counter.js");
const CmdDataCounter = require("./cmd-data-counter.js");

const APP_STATUS_COUNTER_RESET_RIME_INTERVAL_NAME = "uu_app_status_counter_reset_time_interval";
const APP_STATUS_COUNTER_RESET_RIME_INTERVAL_DEFAULT_VALUE = 60;

/**
 * @typedef {{
 *  uuId: string?,
 *  identityType: string?,
 *  identityAppKey: string?,
 *  clientAppKey: string?,
 *  errorCode: string?,
 *  ucName: string?,
 *  awid: string?,
 *  reqTime: number?,
 *  statusCode: number?
 * }} ResData
 */

class AppStatusCounter {
  constructor() {
    this.opts = new OptsReader(Config);
    this.counterResetTimeInterval = this.opts.get(
      APP_STATUS_COUNTER_RESET_RIME_INTERVAL_NAME,
      APP_STATUS_COUNTER_RESET_RIME_INTERVAL_DEFAULT_VALUE
    );
    this.reset();
  }

  async record(resData) {
    IdentityDataCounter.record(resData);
    CmdDataCounter.record(resData);
  }

  /**
   * Resets the counter. Optionally, the start time of the new period can be provided.
   * @param {Date} [startTime] - start time of the new period
   */
  reset(startTime = new Date()) {
    this.period = { startTime: startTime.toISOString(), endTime: null };
    this.dataHistoryKey = startTime;
    CmdDataCounter.reset();
    IdentityDataCounter.reset();
  }

  /**
   * Gets the data for the current period. Optionally the end time of the period can be provided.
   * @param {Date} [endTime] - end time of the period
   * @returns {{ dataHistoryKey: Date } & Record<string, unknown>} - data for the current period
   */
  getData(endTime = new Date()) {
    // set start time and end time in ISO format
    this.period.endTime = endTime.toISOString();

    const data = {
      period: this.period,
      dataHistoryKey: this.dataHistoryKey,
      uuCmdData: CmdDataCounter.getData(),
      uuIdentityData: IdentityDataCounter.getData(),
    };

    return data;
  }

  getCounterResetTimeInterval() {
    return this.counterResetTimeInterval;
  }
}

module.exports = new AppStatusCounter();
