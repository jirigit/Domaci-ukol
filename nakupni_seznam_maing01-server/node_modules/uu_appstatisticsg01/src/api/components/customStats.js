"use strict";
//@@viewOn:revision
// coded: Eduard Batiushchenko (9108-9377-1)
// reviewed:
//@@viewOff:revision

const GetGeneralFileAttributesAbl = require("../../abl/custom-stats/get-general-file-attributes-abl");
const GetManagementFileAttributesAbl = require("../../abl/custom-stats/get-management-file-attributes-abl");
const GetExecutivesFileAttributesAbl = require("../../abl/custom-stats/get-executives-file-attributes-abl");
const PrivilegedGetExecutivesFileAttributesAbl = require("../../abl/custom-stats/privileged-get-executives-file-attributes-abl");
const PrivilegedGetManagementFileAttributesAbl = require("../../abl/custom-stats/privileged-get-management-file-attributes-abl");
const RecalculateCustomFileAbl = require("../../abl/custom-stats/recalculate-custom-file-abl");
const PrivilegedRecalculateCustomFileAbl = require("../../abl/custom-stats/privileged-recalculate-custom-file-abl");
const UpdateCustomFileAbl = require("../../abl/custom-stats/update-custom-file-abl");
const PrivilegedUpdateCustomFileAbl = require("../../abl/custom-stats/privileged-update-custom-file-abl");

/**
 * methods for custom statistics
 */
class Custom {
  /**
   * gets general file attributes
   *
   * @param awid
   * @param dtoIn { fileCode }
   * @returns {Promise<{uuAppErrorMap: *, code: *, binaryContentType: *, binaryDataUrl: *, validTo: *}>}
   */
  async getGeneralFileAttributes(awid, dtoIn) {
    return GetGeneralFileAttributesAbl.getGeneralFileAttributes(awid, dtoIn);
  }

  /**
   * gets management file attributes
   *
   * @param awid
   * @param dtoIn { fileCode }
   * @returns {Promise<{uuAppErrorMap: *, code: *, binaryContentType: *, binaryDataUrl: *, validTo: *}>}
   */
  async getManagementFileAttributes(awid, dtoIn) {
    return GetManagementFileAttributesAbl.getManagementFileAttributes(awid, dtoIn);
  }

  /**
   * gets executive file attributes
   *
   * @param awid
   * @param dtoIn { fileCode }
   * @returns {Promise<{uuAppErrorMap: *, code: *, binaryContentType: *, binaryDataUrl: *, validTo: *}>}
   */
  async getExecutivesFileAttributes(awid, dtoIn) {
    return GetExecutivesFileAttributesAbl.getExecutivesFileAttributes(awid, dtoIn);
  }

  /**
   *  gets privileged executive file attributes
   *
   * @param awid
   * @param dtoIn { fileCode }
   * @returns {Promise<{uuAppErrorMap: *, code: *, binaryContentType: *, binaryDataUrl: *, validTo: *}>}
   */
  async privilegedGetExecutivesFileAttributes(awid, dtoIn) {
    return PrivilegedGetExecutivesFileAttributesAbl.privilegedGetExecutivesFileAttributes(awid, dtoIn);
  }

  /**
   * get privileged management file attributes
   *
   * @param awid
   * @param dtoIn { fileCode }
   * @returns {Promise<{uuAppErrorMap: *, code: *, binaryContentType: *, binaryDataUrl: *, validTo: *}>}
   */
  async privilegedGetManagementFileAttributes(awid, dtoIn) {
    return PrivilegedGetManagementFileAttributesAbl.privilegedGetManagementFileAttributes(awid, dtoIn);
  }

  /**
   * recalculates custom statistic
   *
   * @param awid
   * @param dtoIn { scriptCode, scriptDtoIn }
   * @returns {Promise<{uuAppErrorMap: *}>}
   */
  async recalculateCustomFile(awid, dtoIn) {
    return RecalculateCustomFileAbl.recalculateCustomFile(awid, dtoIn);
  }

  /**
   * recalculates privileged custom statistics
   * @param awid
   * @param dtoIn  { scriptCode, scriptDtoIn }
   * @returns {Promise<{uuAppErrorMap: *}>}
   */
  async privilegedRecalculateCustomFile(awid, dtoIn) {
    return PrivilegedRecalculateCustomFileAbl.privilegedRecalculateCustomFile(awid, dtoIn);
  }

  /**
   * updates data
   * @param awid
   * @param dtoIn { fileCode, data, collection }
   * @returns {Promise<*&{uuAppErrorMap: *}>}
   */
  async updateCustomFile(awid, dtoIn) {
    return UpdateCustomFileAbl.updateCustomFile(awid, dtoIn);
  }

  /**
   *
   * @param awid
   * @param dtoIn { fileCode, data, collection }
   * @returns {Promise<*&{uuAppErrorMap: *}>}
   */
  async privilegedUpdateCustomFile(awid, dtoIn) {
    return PrivilegedUpdateCustomFileAbl.privilegedUpdateCustomFile(awid, dtoIn);
  }
}

module.exports = new Custom();
