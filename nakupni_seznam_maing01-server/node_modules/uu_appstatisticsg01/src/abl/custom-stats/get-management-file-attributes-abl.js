"use strict";
// documentation: https://uuapp.plus4u.net/uu-bookkit-maing01/d11a43aa3a214083b84a4e4103a4f635/book/page?code=34937608
// template:
// templateVersion:
//@@viewOn:revision
// coded: Eduard Batiushchenko (9108-9377-1)
// reviewed:
//@@viewOff:revision

const { Validator } = require("uu_appg01_server").Validation;
const { ValidationHelper } = require("uu_appg01_server").AppServer;
const Errors = require("../../api/errors/custom-stats-errors");
const WARNINGS = require("../../api/warnings/custom-stats-warnings");
const Helper = require("../../helpers/getFileAttributes-helper");
const { Config } = require("uu_appg01_server").Utils;
const Constants = require("../../components/constants/custom-stats-constants");
const { getSystemIdentity } = require("../../helpers/app-stats-helper");

class GetManagementFileAttributes {
  constructor() {
    this.validator = Validator.load();
  }

  async getManagementFileAttributes(awid, dtoIn) {
    // HDS 1, 1.1, 1.2, 1.3, 1.4
    const validationResult = this.validator.validate("uuAppstatisticsGetFileAttributesDtoInType", dtoIn);
    const uuAppErrorMap = ValidationHelper.processValidationResult(
      dtoIn,
      validationResult,
      WARNINGS.getManagementFileAttributes.code,
      Errors.GetManagementFileAttributes.InvalidDtoIn
    );

    // HDS 2
    const binaryStoreBaseUri = Config.get(Constants.binaryStoreBaseUri) || Config.get(Constants.defaultBinaryStore);
    if (!binaryStoreBaseUri) throw new Errors.GetManagementFileAttributes.MissingBinaryStore(uuAppErrorMap);

    // HDS 3
    const sysIdentitySession = await getSystemIdentity();
    //HDS 4
    const collection = [Constants.collections.uuAppStatistics, Constants.collections.management];
    const fileObject = await Helper.getFileAttributes(awid, dtoIn, binaryStoreBaseUri, sysIdentitySession, collection);

    // HDS 5
    return { ...fileObject, uuAppErrorMap };
  }
}

module.exports = new GetManagementFileAttributes();
